{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helpers/helpers.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","maxId","todosArray","arrayOfIds","Math","max","App","useState","todoTitle","setTodoTitle","todoUserName","setTodoUserName","setTodos","titleSpan","setTitleSpan","userNameSpan","setUserNameSpan","useEffect","updatedTodos","todosFromServer","usersFromServer","find","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","disabled","onClick","newTodo","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEH,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEH,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXC,OAAQ,KCjBG,GACb,CACEH,GAAI,EACJI,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEN,GAAI,EACJI,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEN,GAAI,EACJI,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEN,GAAI,EACJI,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEN,GAAI,EACJI,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEN,GAAI,EACJI,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEN,GAAI,EACJI,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEN,GAAI,EACJI,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEN,GAAI,EACJI,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEN,GAAI,GACJI,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,OCrDEC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKF,OAA7C,SACGE,EAAKJ,QCAGO,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,0BACE,UAASA,EAAKZ,GACdS,UAAS,mBAAcG,EAAKV,UAAY,sBAAwB,IAFlE,UAIE,oBAAIO,UAAU,kBAAd,SAAiCG,EAAKX,QACvB,OAAdW,EAAKJ,MAAiB,cAAC,EAAD,CAAUA,KAAMI,EAAKJ,WCNnCK,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASL,UAAU,WAAnB,SACGK,EAAMC,KAAI,SAACH,GAAD,OACT,cAAC,EAAD,CAAUA,KAAMA,UCKf,SAASI,EAAMC,GACpB,IAAMC,EAAaD,EAAWF,KAAI,SAAAH,GAAI,OAAIA,EAAKZ,MAE/C,OAAOmB,KAAKC,IAAL,MAAAD,KAAI,YAAQD,ICTd,IAAMG,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,mBAAiB,IAA3C,mBAAOR,EAAP,KAAca,EAAd,KAEA,EAAkCL,mBAAS,IAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAwCP,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACR,IAAMC,EAAuBC,EAAgBnB,KAAI,SAAAH,GAAI,kCAChDA,GADgD,IAEnDJ,MDjBkBL,ECiBJS,EAAKT,ODhBLgC,EAAgBC,MAAK,SAAA5B,GAAI,OAAIA,EAAKR,KAAOG,MAEvC,QAHf,IAAiBA,KCoBpBwB,EAASM,KACR,IA4CH,OACE,sBAAKxB,UAAU,MAAf,UACE,+CAEA,uBAAM4B,OAAO,aAAaC,OAAO,OAAOC,SA9Cd,SAACC,GAC7BA,EAAMC,kBA6CJ,UACE,sBAAKhC,UAAU,QAAf,UACE,2CAEG,IACD,uBACEiC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOrB,EACPsB,SA5Bc,SAACL,GACzB,IAAQI,EAAUJ,EAAMM,OAAhBF,MAERpB,EAAaoB,GACbf,EAAa,UA2BP,sBAAMpB,UAAU,QAAhB,SAAyBmB,OAG3B,qBAAKnB,UAAU,QAAf,SACE,0CAEG,IACD,yBACE,UAAQ,aACRmC,MAAOnB,EACPoB,SAlCa,SAACL,GACxB,IAAQI,EAAUJ,EAAMM,OAAhBF,MAERlB,EAAgBkB,GAChBb,EAAgB,KA2BR,UAKE,wBACEgB,UAAQ,EACRH,MAAM,GAFR,2BAMCT,EAAgBpB,KAAI,SAAAP,GACnB,IAAQR,EAAaQ,EAAbR,GAAII,EAASI,EAATJ,KAEZ,OACE,wBAAiBwC,MAAK,UAAKxC,GAA3B,SACGA,GADUJ,SAMnB,sBAAMS,UAAU,QAAhB,SAAyBqB,SAI7B,wBACEY,KAAK,SACL,UAAQ,eACRM,QA1FkB,WACxB,IDtByB5C,ECsBnB6C,EAAgB,CACpBjD,GAAIgB,EAAMF,GAAS,EACnBb,MAAOsB,EACPrB,WAAW,EACXC,OAAQ,EACRK,MD3BuBJ,EC2BJqB,ED1BLU,EAAgBC,MAAK,SAAA5B,GAAI,OAAIA,EAAKJ,OAASA,MAEzC,OC2BbmB,GACHM,EAAa,wBAGVJ,GACHM,EAAgB,wBAGdR,GAAaE,IACfE,GAAS,SAACuB,GAAD,4BAAmBA,GAAnB,CAA8BD,OACvCzB,EAAa,IACbE,EAAgB,MAmEd,oBAQF,cAAC,EAAD,CAAUZ,MAAOA,QC3HvBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.71c9799d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user !== null && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\nimport { Todo } from '../types/Todo';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport function findTodoUser(name: string): User | null {\n  const foundUser = usersFromServer.find(user => user.name === name);\n\n  return foundUser || null;\n}\n\nexport function maxId(todosArray: Todo[]): number {\n  const arrayOfIds = todosArray.map(todo => todo.id);\n\n  return Math.max(...arrayOfIds);\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { findTodoUser, getUser, maxId } from './helpers/helpers';\n\nexport const App: React.FC = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoUserName, setTodoUserName] = useState('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [titleSpan, setTitleSpan] = useState('');\n  const [userNameSpan, setUserNameSpan] = useState('');\n\n  useEffect(() => {\n    const updatedTodos: Todo[] = todosFromServer.map(todo => ({\n      ...todo,\n      user: getUser(todo.userId),\n    }));\n\n    setTodos(updatedTodos);\n  }, []);\n\n  const preventDefaultHandler = (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n  };\n\n  const addNewTodoHandler = () => {\n    const newTodo: Todo = {\n      id: maxId(todos) + 1,\n      title: todoTitle,\n      completed: false,\n      userId: 2,\n      user: findTodoUser(todoUserName),\n    };\n\n    if (!todoTitle) {\n      setTitleSpan('Please enter a title');\n    }\n\n    if (!todoUserName) {\n      setUserNameSpan('Please choose a user');\n    }\n\n    if (todoTitle && todoUserName) {\n      setTodos((prevTodos) => [...prevTodos, newTodo]);\n      setTodoTitle('');\n      setTodoUserName('');\n    }\n  };\n\n  const handleTitleChange = (event: { target: { value: any; }; }) => {\n    const { value } = event.target;\n\n    setTodoTitle(value);\n    setTitleSpan('');\n  };\n\n  const handleUserChange = (event: { target: { value: any; }; }) => {\n    const { value } = event.target;\n\n    setTodoUserName(value);\n    setUserNameSpan('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={preventDefaultHandler}>\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={todoTitle}\n              onChange={handleTitleChange}\n            />\n          </label>\n          <span className=\"error\">{titleSpan}</span>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={todoUserName}\n              onChange={handleUserChange}\n            >\n              <option\n                disabled\n                value=\"\"\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(user => {\n                const { id, name } = user;\n\n                return (\n                  <option key={id} value={`${name}`}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n            <span className=\"error\">{userNameSpan}</span>\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={addNewTodoHandler}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}