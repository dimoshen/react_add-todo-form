{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helpers/helpers.tsx","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","getNewId","todosArray","arrayOfIds","Math","max","TodoForm","setTodos","useState","todoTitle","setTodoTitle","setUserId","titleSpan","setTitleSpan","userNameSpan","setUserNameSpan","action","method","onSubmit","event","preventDefault","prevTodos","type","placeholder","value","onChange","target","disabled","updatedTodos","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3d6123f.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\nimport { Todo } from '../types/Todo';\n\nexport function getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport function findUserId(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport function getNewId(todosArray: Todo[]): number {\n  const arrayOfIds = todosArray.map(todo => todo.id);\n\n  return Math.max(...arrayOfIds);\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUserById, getNewId } from '../../helpers/helpers';\n\ninterface Props {\n  todos: Todo[],\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>\n}\nexport const TodoForm: React.FC<Props> = ({ todos, setTodos }) => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [titleSpan, setTitleSpan] = useState('');\n  const [userNameSpan, setUserNameSpan] = useState('');\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTodoTitle(value);\n    setTitleSpan('');\n  };\n\n  const changeUserIdHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(+value);\n    setUserNameSpan('');\n  };\n\n  const submitHandler = () => {\n    if (!todoTitle) {\n      setTitleSpan('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserNameSpan('Please choose a user');\n    }\n\n    if (!todoTitle || !userId) {\n      return;\n    }\n\n    setTodos((prevTodos) => [\n      ...prevTodos,\n      {\n        id: getNewId(todos) + 1,\n        title: todoTitle,\n        completed: false,\n        userId: 2,\n        user: getUserById(userId),\n      },\n    ]);\n\n    setTodoTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/users\"\n      method=\"POST\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        submitHandler();\n      }}\n    >\n      <div className=\"field\">\n        <label>\n          Title:\n          {' '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleTitleChange}\n          />\n        </label>\n        <span className=\"error\">{titleSpan}</span>\n      </div>\n\n      <div className=\"field\">\n        <label>\n          User:\n          {' '}\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={changeUserIdHandler}\n          >\n            <option\n              disabled\n              value={0}\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n          <span className=\"error\">{userNameSpan}</span>\n        </label>\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './helpers/helpers';\nimport { TodoForm } from './components/TodoForm';\n\nconst updatedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(updatedTodos);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm\n        todos={todos}\n        setTodos={setTodos}\n      />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}